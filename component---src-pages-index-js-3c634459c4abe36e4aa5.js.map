{"version":3,"sources":["webpack:///./src/components/examples/base/BaseExample.js","webpack:///./src/components/examples/base/BaseDocumentation.js","webpack:///./src/components/examples/customAnimationTimeout/CustomAnimationTimeoutExample.js","webpack:///./src/components/examples/customAnimationTimeout/CustomAnimationTimeoutDocumentation.js","webpack:///./src/components/examples/customChildComponent/CustomChildComponentExample.js","webpack:///./src/components/examples/customChildComponent/CustomChildComponentDocumentation.js","webpack:///./src/components/examples/customComponentData/CustomComponentDataExample.js","webpack:///./src/components/examples/customComponentData/CustomComponentDataDocumentation.js","webpack:///./src/components/examples/customComponent/CustomComponentExample.js","webpack:///./src/components/examples/customComponent/CustomComponentDocumentation.js","webpack:///./src/components/examples/customTimeout/CustomTimeoutExample.js","webpack:///./src/components/examples/customTimeout/CustomTimeoutDocumentation.js","webpack:///./src/pages/index.js"],"names":["BaseExample","snackbarManager","useRef","react_default","a","createElement","build","ref","onClick","current","create","message","BaseDocumentation","className","CustomAnimationTimeoutExample","animationTimeout","CustomAnimationTimeoutDocumentation","CustomSnackbarComponent","props","style","margin","CustomComponentExample","component","CustomChildComponentDocumentation","display","justifyContent","flexGrow","marginRight","data","action","CustomComponentDataExample","CustomComponentDataDocumentation","_ref","background","color","padding","marginBottom","CustomComponentDocumentation","CustomComponentExample_CustomComponentExample","CustomTimeoutExample","timeout","CustomTimeoutDocumentation","IndexPage","useEffect","Prism","highlightAll","Helmet","id","styles","header","href","src","main","exampleCode","__webpack_require__","d","__webpack_exports__"],"mappings":"kLAKe,SAASA,IACtB,IAAMC,EAAkBC,iBAAO,MAQ/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,IAAKN,IACtBE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAVd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BC,QAAS,sBAQP,mBCdO,SAASC,IACtB,OACET,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAAA,8CAIAF,EAAAC,EAAAC,cAACL,EAAD,MAEAG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,wjBCXO,SAASC,IACtB,IAAMb,EAAkBC,iBAAO,MAQ/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBS,iBAAkB,IAAMR,IAAKN,IAC9CE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAVd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BC,QAAS,gCAQP,mBCdO,SAASK,IACtB,OACEb,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,sCACEF,EAAAC,EAAAC,cAAA,4HAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BAAmBF,EAAAC,EAAAC,cAAA,gCAAnB,gBAA6DF,EAAAC,EAAAC,cAAA,+BAA7D,eACAF,EAAAC,EAAAC,cAAA,4BAAmBF,EAAAC,EAAAC,cAAA,gCAAnB,6CAGFF,EAAAC,EAAAC,cAACS,EAAD,MAEAX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,4mBCfV,SAASI,EAAwBC,GAC/B,OACEf,EAAAC,EAAAC,cAACC,EAAA,SAAaY,EACZf,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAACC,OAAQ,IAAKF,EAAMP,UAKtB,SAASU,IACtB,IAAMpB,EAAkBC,iBAAO,MAQ/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,IAAKN,EAAiBqB,UAAWL,IAClDd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAVd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BC,QAAS,sBAQP,mBCtBO,SAASY,IACtB,OACEpB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,8CAEAF,EAAAC,EAAAC,cAAA,4CACkCF,EAAAC,EAAAC,cAAA,wBADlC,+HAKAF,EAAAC,EAAAC,cAAA,wDAC8CF,EAAAC,EAAAC,cAAA,wBAD9C,qGAEoDF,EAAAC,EAAAC,cAAA,wBAFpD,kDAKAF,EAAAC,EAAAC,cAACgB,EAAD,MAEAlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,mxBCjBR,SAASI,EAAwBC,GAC/B,OACEf,EAAAC,EAAAC,cAACC,EAAA,SAAaY,EACZf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAACK,QAAS,OAAQC,eAAgB,WAC5CtB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAACC,OAAQ,QAASM,SAAU,IAAKR,EAAMP,SACnDR,EAAAC,EAAAC,cAAA,UAAQc,MAAO,CAACQ,YAAa,UAAWT,EAAMU,KAAKC,UAM5C,SAASC,IACtB,IAAM7B,EAAkBC,iBAAO,MAW/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,IAAKN,EAAiBqB,UAAWL,IAClDd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAbd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BkB,KAAM,CACJC,OAAQ,SAEVlB,QAAS,0BAQP,mBC5BO,SAASoB,IACtB,OACE5B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,uDAEAF,EAAAC,EAAAC,cAAA,wJAKAF,EAAAC,EAAAC,cAAA,0BACgBF,EAAAC,EAAAC,cAAA,oBADhB,8CAC4EF,EAAAC,EAAAC,cAAA,sCAD5E,mEAEgEF,EAAAC,EAAAC,cAAA,sBAFhE,cAKAF,EAAAC,EAAAC,cAACyB,EAAD,MAEA3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,ggCCjBR,SAASI,EAATe,GAA8C,IAAXrB,EAAWqB,EAAXrB,QACjC,OACER,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CACVc,WAAY,UACZC,MAAO,UACPC,QAAS,QACTC,aAAc,UAEbzB,GAKQ,SAASU,IACtB,IAAMpB,EAAkBC,iBAAO,MAQ/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,IAAKN,EAAiBqB,UAAWL,IAClDd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAVd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BC,QAAS,sBAQP,mBC3BO,SAAS0B,IACtB,OACElC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,uCACEF,EAAAC,EAAAC,cAAA,0JAE2DF,EAAAC,EAAAC,cAAA,yBAF3D,gBAE8FF,EAAAC,EAAAC,cAAA,+BAF9F,kCAG+BF,EAAAC,EAAAC,cAAA,uBAH/B,sCAMAF,EAAAC,EAAAC,cAAA,2FAIAF,EAAAC,EAAAC,cAACiC,EAAD,MAEAnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,q1BChBK,SAAS0B,IACtB,IAAMtC,EAAkBC,iBAAO,MAS/B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,IAAKN,IACtBE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQG,QAXd,WACEP,EAAgBQ,QAAQC,OAAO,CAC7BC,QAAS,oBACT6B,QAAS,QAQP,mBCfO,SAASC,IACtB,OACEtC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,wGAEAF,EAAAC,EAAAC,cAACkC,EAAD,MAEApC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,gBAAhB,+mBCMO,SAAS6B,IAKtB,OAJAC,oBAAU,WACRC,IAAMC,iBAIN1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAA,OAAD,KACE3C,EAAAC,EAAAC,cAAA,sCAEFF,EAAAC,EAAAC,cAAA,UAAQ0C,GAAIC,IAAOC,QACjB9C,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG6C,KAAK,sDAAqD/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAI,2FAC3EhD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG6C,KAAK,kDAAiD/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAI,6DAEzEhD,EAAAC,EAAAC,cAAA,QAAM0C,GAAIC,IAAOI,MACfjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sLAIFF,EAAAC,EAAAC,cAAA,OAAK0C,GAAIC,IAAOK,aACdlD,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAAC0B,EAAD,SAhDVuB,EAAAC,EAAAC,EAAA,4BAAAd","file":"component---src-pages-index-js-3c634459c4abe36e4aa5.js","sourcesContent":["import React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function BaseExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport BaseExample from './BaseExample';\n\nexport default function BaseDocumentation() {\n  return (\n    <section>\n      <h3>Base</h3>\n\n      <p>\n        The default timeout is 3 seconds.\n      </p>\n\n      <BaseExample />\n\n      <pre>\n        <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function BaseExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function CustomAnimationTimeoutExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Custom animation timeout!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager animationTimeout={1000} ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport CustomAnimationTimeoutExample from './CustomAnimationTimeoutExample';\n\nexport default function CustomAnimationTimeoutDocumentation() {\n  return (\n    <section>\n      <h3>Custom Animation Timeout</h3>\n        <p>\n          The snackbars are displayed with a simple animation. The duration of this animation can be changed in two ways:\n        </p>\n\n        <ul>\n          <li>Specifying the <code>animationTimeout</code> prop on the <code>SnackbarManager</code> component.</li>\n          <li>Specifying the <code>animationTimeout</code> property on the passed snackbar object.</li>\n        </ul>\n\n        <CustomAnimationTimeoutExample />\n            \n        <pre>\n          <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function CustomAnimationTimeoutExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Custom animation timeout!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager animationTimeout={1000} ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { Snackbar, SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent(props) {\n  return (\n    <Snackbar {...props}>\n      <h2 style={{margin: 0}}>{props.message}</h2>\n    </Snackbar>\n  );\n}\n\nexport default function CustomComponentExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport CustomChildComponentExample from './CustomChildComponentExample';\n\nexport default function CustomChildComponentDocumentation() {\n  return (\n    <section>\n      <h3>Extending the Snackbar Component</h3>\n\n      <p>\n        You can also extend the default <code>Snackbar</code> component.\n        This allows you to keep the default styling and animation, but also add your own child content to the snackbar.\n      </p>\n\n      <p>\n        To extend the default component, import the <code>Snackbar</code> component and use it in your custom component.\n        Make sure to pass all received props along to the <code>Snackbar</code> component, or else the animations won't work.\n      </p>\n\n      <CustomChildComponentExample />\n\n      <pre>\n        <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { Snackbar, SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent(props) {\n  return (\n    <Snackbar {...props}>\n      <h2 style={{margin: 0}}>{props.message}</h2>\n    </Snackbar>\n  );\n}\n\nexport default function CustomComponentExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { Snackbar, SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent(props) {\n  return (\n    <Snackbar {...props}>\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div style={{margin: '0.5em', flexGrow: 1}}>{props.message}</div>\n        <button style={{marginRight: '0.5em'}}>{props.data.action}</button>\n      </div>\n    </Snackbar>\n  );\n}\n\nexport default function CustomComponentDataExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      data: {\n        action: 'Retry'\n      },\n      message: '⚠️ Connection Error'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport CustomComponentDataExample from './CustomComponentDataExample';\n\nexport default function CustomComponentDataDocumentation() {\n  return (\n    <section>\n      <h3>Passing Custom Data to a Custom Component</h3>\n\n      <p>\n        You can also create more rich snackbar notifications by passing arbitrary data\n        that can be used when rendering a custom snackbar component.\n      </p>\n\n      <p>\n        Simply pass a <code>data</code> property in the snackbar object passed to <code>SnackbarManager.create</code>,\n        then reference the data attributes in your custom component's <code>render</code> function.\n      </p>\n\n      <CustomComponentDataExample />\n\n      <pre>\n        <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { Snackbar, SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent(props) {\n  return (\n    <Snackbar {...props}>\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div style={{margin: '0.5em', flexGrow: 1}}>{props.message}</div>\n        <button style={{marginRight: '0.5em'}}>{props.data.action}</button>\n      </div>\n    </Snackbar>\n  );\n}\n\nexport default function CustomComponentDataExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      data: {\n        action: 'Retry'\n      },\n      message: '⚠️ Connection Error'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent({ message }) {\n  return (\n    <div style={{\n      background: '#FF0000',\n      color: '#FFFFFF',\n      padding: '0.5em',\n      marginBottom: '0.5em'\n    }}>\n      {message}\n    </div>\n  );\n}\n\nexport default function CustomComponentExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport CustomComponentExample from './CustomComponentExample';\n\nexport default function CustomComponentDocumentation() {\n  return (\n    <section>\n      <h3>Custom Snackbar Component</h3>\n        <p>\n          For greater customization of the snackbar component, a custom component can be used.\n          Create your custom snackbar component and pass it as the <code>component</code> prop to the <code>SnackbarManager</code>.\n          The component will receive a <code>message</code> prop with the message to display.\n        </p>\n\n        <p>\n          Note that if you use a custom component, you will lose the default animations.\n        </p>\n\n        <CustomComponentExample />\n\n        <pre>\n          <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nfunction CustomSnackbarComponent({ message }) {\n  return (\n    <div style={{\n      background: '#FF0000',\n      color: '#FFFFFF',\n      padding: '0.5em',\n      marginBottom: '0.5em'\n    }}>\n      {message}\n    </div>\n  );\n}\n\nexport default function CustomComponentExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: 'Hello Snackbar!'\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} component={CustomSnackbarComponent} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function CustomTimeoutExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: '5 second timeout!',\n      timeout: 5000\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport CustomTimeoutExample from './CustomTimeoutExample';\n\nexport default function CustomTimeoutDocumentation() {\n  return (\n    <section>\n      <h3>Custom Timeout</h3>\n      <p>The timeout can be changed by setting the `timeout` property of the passed snackbar object.</p>\n\n      <CustomTimeoutExample />\n            \n      <pre>\n        <code className=\"language-jsx\">{`\nimport React, { useRef } from 'react';\n\nimport { SnackbarManager } from 'react-snackbar-alert';\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nexport default function CustomTimeoutExample() {\n  const snackbarManager = useRef(null);\n\n  function showSnackbar() {\n    snackbarManager.current.create({\n      message: '5 second timeout!',\n      timeout: 5000\n    });\n  } \n\n  return (\n    <div>\n      <SnackbarManager ref={snackbarManager} />\n      <main>\n        <button onClick={showSnackbar}>Show Snackbar</button>\n      </main>\n    </div>\n  );\n}\n        `}</code>\n      </pre>\n    </section>\n  )\n}\n","import Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\nimport 'prismjs/components/prism-jsx.min';\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport 'react-snackbar-alert/styles/react-snackbar-alert.css';\n\nimport {\n  BaseDocumentation,\n  CustomAnimationTimeoutDocumentation,\n  CustomChildComponentDocumentation,\n  CustomComponentDataDocumentation,\n  CustomComponentDocumentation,\n  CustomTimeoutDocumentation\n} from '../components/examples';\n\nimport styles from './index.module.css';\n\nexport default function IndexPage() {\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n\n  return (\n    <div>\n      <Helmet>\n        <title>React Snackbar Alert</title>\n      </Helmet>\n      <header id={styles.header}>\n        <h1>React Snackbar Alert</h1>\n        <div><a href=\"https://github.com/joeattardi/react-snackbar-alert\"><img src=\"https://img.shields.io/github/stars/joeattardi/react-snackbar-alert.svg?style=social\" /></a></div>\n        <div><a href=\"https://npmjs.com/package/react-snackbar-alert\"><img src=\"https://img.shields.io/npm/v/react-snackbar-alert.svg\" /></a></div>\n      </header>\n      <main id={styles.main}>\n        <div>\n          <p>\n            React Snackbar Alert is a very simple library for \"snackbar\" style notifications. Snackbars appear at the bottom of the viewport, and multiple snackbars can be stacked.\n          </p>\n        </div>\n        <div id={styles.exampleCode}>\n          <h2>Code Examples</h2>\n\n          <BaseDocumentation />\n          <CustomTimeoutDocumentation />\n          <CustomAnimationTimeoutDocumentation />\n          <CustomComponentDocumentation />\n          <CustomChildComponentDocumentation />\n          <CustomComponentDataDocumentation />\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"sourceRoot":""}